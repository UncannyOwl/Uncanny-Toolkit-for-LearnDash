/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/index.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./node_modules/eventslibjs/dist/events.polyfills.min.js":
/*!***************************************************************!*\
  !*** ./node_modules/eventslibjs/dist/events.polyfills.min.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(global) {var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*! eventslibjs v1.2.0 | (c) 2019 Chris Ferdinandi | MIT License | http://github.com/cferdinandi/events */\nwindow.Element&&!Element.prototype.closest&&(Element.prototype.closest=function(e){var t,n=(this.document||this.ownerDocument).querySelectorAll(e),o=this;do{for(t=n.length;0<=--t&&n.item(t)!==o;);}while(t<0&&(o=o.parentElement));return o}),(function(e,t){ true?!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = (function(){return t(e)}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)):undefined})(\"undefined\"!=typeof global?global:\"undefined\"!=typeof window?window:this,(function(r){\"use strict\";var i={},c={},f=function(o){c[o.type]&&c[o.type].forEach((function(e){var t,n;(t=o.target,n=e.selector,-1<[\"*\",\"window\",\"document\",\"document.documentElement\",r,document,document.documentElement].indexOf(n)||(\"string\"!=typeof n&&n.contains?n===t||n.contains(t):t.closest(n)))&&e.callback(o)}))};return i.on=function(e,t,n){t&&n&&e.split(\",\").forEach((function(e){e=e.trim(),c[e]||(c[e]=[],r.addEventListener(e,f,!0)),c[e].push({selector:t,callback:n})}))},i.off=function(e,n,o){e.split(\",\").forEach((function(e){if(e=e.trim(),c[e]){if(c[e].length<2||!n)return delete c[e],void r.removeEventListener(e,f,!0);var t=(function(e,t,n){for(var o=0;o<e.length;o++)if(e[o].selector===t&&e[o].callback.toString()===n.toString())return o;return-1})(c[e],n,o);t<0||c[e].splice(t,1)}}))},i.once=function(n,o,r){i.on(n,o,(function e(t){r(t),i.off(n,o,e)}))},i.get=function(){var e={};for(var t in c)c.hasOwnProperty(t)&&(e[t]=c[t]);return e},i}));\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../webpack/buildin/global.js */ \"./node_modules/webpack/buildin/global.js\")))\n\n//# sourceURL=webpack:///./node_modules/eventslibjs/dist/events.polyfills.min.js?");

/***/ }),

/***/ "./node_modules/url-search-params-polyfill/index.js":
/*!**********************************************************!*\
  !*** ./node_modules/url-search-params-polyfill/index.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(global) {/**\n *\n *\n * @author Jerry Bendy <jerry@icewingcc.com>\n * @licence MIT\n *\n */\n\n(function(self) {\n    'use strict';\n\n    var nativeURLSearchParams = (function() {\n            // #41 Fix issue in RN\n            try {\n                if (self.URLSearchParams && (new self.URLSearchParams('foo=bar')).get('foo') === 'bar') {\n                    return self.URLSearchParams;\n                }\n            } catch (e) {}\n            return null;\n        })(),\n        isSupportObjectConstructor = nativeURLSearchParams && (new nativeURLSearchParams({a: 1})).toString() === 'a=1',\n        // There is a bug in safari 10.1 (and earlier) that incorrectly decodes `%2B` as an empty space and not a plus.\n        decodesPlusesCorrectly = nativeURLSearchParams && (new nativeURLSearchParams('s=%2B').get('s') === '+'),\n        __URLSearchParams__ = \"__URLSearchParams__\",\n        // Fix bug in Edge which cannot encode ' &' correctly\n        encodesAmpersandsCorrectly = nativeURLSearchParams ? (function() {\n            var ampersandTest = new nativeURLSearchParams();\n            ampersandTest.append('s', ' &');\n            return ampersandTest.toString() === 's=+%26';\n        })() : true,\n        prototype = URLSearchParamsPolyfill.prototype,\n        iterable = !!(self.Symbol && self.Symbol.iterator);\n\n    if (nativeURLSearchParams && isSupportObjectConstructor && decodesPlusesCorrectly && encodesAmpersandsCorrectly) {\n        return;\n    }\n\n\n    /**\n     * Make a URLSearchParams instance\n     *\n     * @param {object|string|URLSearchParams} search\n     * @constructor\n     */\n    function URLSearchParamsPolyfill(search) {\n        search = search || \"\";\n\n        // support construct object with another URLSearchParams instance\n        if (search instanceof URLSearchParams || search instanceof URLSearchParamsPolyfill) {\n            search = search.toString();\n        }\n        this [__URLSearchParams__] = parseToDict(search);\n    }\n\n\n    /**\n     * Appends a specified key/value pair as a new search parameter.\n     *\n     * @param {string} name\n     * @param {string} value\n     */\n    prototype.append = function(name, value) {\n        appendTo(this [__URLSearchParams__], name, value);\n    };\n\n    /**\n     * Deletes the given search parameter, and its associated value,\n     * from the list of all search parameters.\n     *\n     * @param {string} name\n     */\n    prototype['delete'] = function(name) {\n        delete this [__URLSearchParams__] [name];\n    };\n\n    /**\n     * Returns the first value associated to the given search parameter.\n     *\n     * @param {string} name\n     * @returns {string|null}\n     */\n    prototype.get = function(name) {\n        var dict = this [__URLSearchParams__];\n        return this.has(name) ? dict[name][0] : null;\n    };\n\n    /**\n     * Returns all the values association with a given search parameter.\n     *\n     * @param {string} name\n     * @returns {Array}\n     */\n    prototype.getAll = function(name) {\n        var dict = this [__URLSearchParams__];\n        return this.has(name) ? dict [name].slice(0) : [];\n    };\n\n    /**\n     * Returns a Boolean indicating if such a search parameter exists.\n     *\n     * @param {string} name\n     * @returns {boolean}\n     */\n    prototype.has = function(name) {\n        return hasOwnProperty(this [__URLSearchParams__], name);\n    };\n\n    /**\n     * Sets the value associated to a given search parameter to\n     * the given value. If there were several values, delete the\n     * others.\n     *\n     * @param {string} name\n     * @param {string} value\n     */\n    prototype.set = function set(name, value) {\n        this [__URLSearchParams__][name] = ['' + value];\n    };\n\n    /**\n     * Returns a string containg a query string suitable for use in a URL.\n     *\n     * @returns {string}\n     */\n    prototype.toString = function() {\n        var dict = this[__URLSearchParams__], query = [], i, key, name, value;\n        for (key in dict) {\n            name = encode(key);\n            for (i = 0, value = dict[key]; i < value.length; i++) {\n                query.push(name + '=' + encode(value[i]));\n            }\n        }\n        return query.join('&');\n    };\n\n    // There is a bug in Safari 10.1 and `Proxy`ing it is not enough.\n    var forSureUsePolyfill = !decodesPlusesCorrectly;\n    var useProxy = (!forSureUsePolyfill && nativeURLSearchParams && !isSupportObjectConstructor && self.Proxy);\n    /*\n     * Apply polifill to global object and append other prototype into it\n     */\n    Object.defineProperty(self, 'URLSearchParams', {\n        value: (useProxy ?\n            // Safari 10.0 doesn't support Proxy, so it won't extend URLSearchParams on safari 10.0\n            new Proxy(nativeURLSearchParams, {\n                construct: function(target, args) {\n                    return new target((new URLSearchParamsPolyfill(args[0]).toString()));\n                }\n            }) :\n            URLSearchParamsPolyfill)\n    });\n\n    var USPProto = self.URLSearchParams.prototype;\n\n    USPProto.polyfill = true;\n\n    /**\n     *\n     * @param {function} callback\n     * @param {object} thisArg\n     */\n    USPProto.forEach = USPProto.forEach || function(callback, thisArg) {\n        var dict = parseToDict(this.toString());\n        Object.getOwnPropertyNames(dict).forEach(function(name) {\n            dict[name].forEach(function(value) {\n                callback.call(thisArg, value, name, this);\n            }, this);\n        }, this);\n    };\n\n    /**\n     * Sort all name-value pairs\n     */\n    USPProto.sort = USPProto.sort || function() {\n        var dict = parseToDict(this.toString()), keys = [], k, i, j;\n        for (k in dict) {\n            keys.push(k);\n        }\n        keys.sort();\n\n        for (i = 0; i < keys.length; i++) {\n            this['delete'](keys[i]);\n        }\n        for (i = 0; i < keys.length; i++) {\n            var key = keys[i], values = dict[key];\n            for (j = 0; j < values.length; j++) {\n                this.append(key, values[j]);\n            }\n        }\n    };\n\n    /**\n     * Returns an iterator allowing to go through all keys of\n     * the key/value pairs contained in this object.\n     *\n     * @returns {function}\n     */\n    USPProto.keys = USPProto.keys || function() {\n        var items = [];\n        this.forEach(function(item, name) {\n            items.push(name);\n        });\n        return makeIterator(items);\n    };\n\n    /**\n     * Returns an iterator allowing to go through all values of\n     * the key/value pairs contained in this object.\n     *\n     * @returns {function}\n     */\n    USPProto.values = USPProto.values || function() {\n        var items = [];\n        this.forEach(function(item) {\n            items.push(item);\n        });\n        return makeIterator(items);\n    };\n\n    /**\n     * Returns an iterator allowing to go through all key/value\n     * pairs contained in this object.\n     *\n     * @returns {function}\n     */\n    USPProto.entries = USPProto.entries || function() {\n        var items = [];\n        this.forEach(function(item, name) {\n            items.push([name, item]);\n        });\n        return makeIterator(items);\n    };\n\n\n    if (iterable) {\n        USPProto[self.Symbol.iterator] = USPProto[self.Symbol.iterator] || USPProto.entries;\n    }\n\n\n    function encode(str) {\n        var replace = {\n            '!': '%21',\n            \"'\": '%27',\n            '(': '%28',\n            ')': '%29',\n            '~': '%7E',\n            '%20': '+',\n            '%00': '\\x00'\n        };\n        return encodeURIComponent(str).replace(/[!'\\(\\)~]|%20|%00/g, function(match) {\n            return replace[match];\n        });\n    }\n\n    function decode(str) {\n        return str\n            .replace(/[ +]/g, '%20')\n            .replace(/(%[a-f0-9]{2})+/ig, function(match) {\n                return decodeURIComponent(match);\n            });\n    }\n\n    function makeIterator(arr) {\n        var iterator = {\n            next: function() {\n                var value = arr.shift();\n                return {done: value === undefined, value: value};\n            }\n        };\n\n        if (iterable) {\n            iterator[self.Symbol.iterator] = function() {\n                return iterator;\n            };\n        }\n\n        return iterator;\n    }\n\n    function parseToDict(search) {\n        var dict = {};\n\n        if (typeof search === \"object\") {\n            // if `search` is an array, treat it as a sequence\n            if (isArray(search)) {\n                for (var i = 0; i < search.length; i++) {\n                    var item = search[i];\n                    if (isArray(item) && item.length === 2) {\n                        appendTo(dict, item[0], item[1]);\n                    } else {\n                        throw new TypeError(\"Failed to construct 'URLSearchParams': Sequence initializer must only contain pair elements\");\n                    }\n                }\n\n            } else {\n                for (var key in search) {\n                    if (search.hasOwnProperty(key)) {\n                        appendTo(dict, key, search[key]);\n                    }\n                }\n            }\n\n        } else {\n            // remove first '?'\n            if (search.indexOf(\"?\") === 0) {\n                search = search.slice(1);\n            }\n\n            var pairs = search.split(\"&\");\n            for (var j = 0; j < pairs.length; j++) {\n                var value = pairs [j],\n                    index = value.indexOf('=');\n\n                if (-1 < index) {\n                    appendTo(dict, decode(value.slice(0, index)), decode(value.slice(index + 1)));\n\n                } else {\n                    if (value) {\n                        appendTo(dict, decode(value), '');\n                    }\n                }\n            }\n        }\n\n        return dict;\n    }\n\n    function appendTo(dict, name, value) {\n        var val = typeof value === 'string' ? value : (\n            value !== null && value !== undefined && typeof value.toString === 'function' ? value.toString() : JSON.stringify(value)\n        );\n\n        // #47 Prevent using `hasOwnProperty` as a property name\n        if (hasOwnProperty(dict, name)) {\n            dict[name].push(val);\n        } else {\n            dict[name] = [val];\n        }\n    }\n\n    function isArray(val) {\n        return !!val && '[object Array]' === Object.prototype.toString.call(val);\n    }\n\n    function hasOwnProperty(obj, prop) {\n        return Object.prototype.hasOwnProperty.call(obj, prop);\n    }\n\n})(typeof global !== 'undefined' ? global : (typeof window !== 'undefined' ? window : this));\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../webpack/buildin/global.js */ \"./node_modules/webpack/buildin/global.js\")))\n\n//# sourceURL=webpack:///./node_modules/url-search-params-polyfill/index.js?");

/***/ }),

/***/ "./node_modules/webpack/buildin/global.js":
/*!***********************************!*\
  !*** (webpack)/buildin/global.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n\n\n//# sourceURL=webpack:///(webpack)/buildin/global.js?");

/***/ }),

/***/ "./node_modules/whatwg-fetch/fetch.js":
/*!********************************************!*\
  !*** ./node_modules/whatwg-fetch/fetch.js ***!
  \********************************************/
/*! exports provided: Headers, Request, Response, DOMException, fetch */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Headers\", function() { return Headers; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Request\", function() { return Request; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Response\", function() { return Response; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DOMException\", function() { return DOMException; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"fetch\", function() { return fetch; });\nvar support = {\n  searchParams: 'URLSearchParams' in self,\n  iterable: 'Symbol' in self && 'iterator' in Symbol,\n  blob:\n    'FileReader' in self &&\n    'Blob' in self &&\n    (function() {\n      try {\n        new Blob()\n        return true\n      } catch (e) {\n        return false\n      }\n    })(),\n  formData: 'FormData' in self,\n  arrayBuffer: 'ArrayBuffer' in self\n}\n\nfunction isDataView(obj) {\n  return obj && DataView.prototype.isPrototypeOf(obj)\n}\n\nif (support.arrayBuffer) {\n  var viewClasses = [\n    '[object Int8Array]',\n    '[object Uint8Array]',\n    '[object Uint8ClampedArray]',\n    '[object Int16Array]',\n    '[object Uint16Array]',\n    '[object Int32Array]',\n    '[object Uint32Array]',\n    '[object Float32Array]',\n    '[object Float64Array]'\n  ]\n\n  var isArrayBufferView =\n    ArrayBuffer.isView ||\n    function(obj) {\n      return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n    }\n}\n\nfunction normalizeName(name) {\n  if (typeof name !== 'string') {\n    name = String(name)\n  }\n  if (/[^a-z0-9\\-#$%&'*+.^_`|~]/i.test(name)) {\n    throw new TypeError('Invalid character in header field name')\n  }\n  return name.toLowerCase()\n}\n\nfunction normalizeValue(value) {\n  if (typeof value !== 'string') {\n    value = String(value)\n  }\n  return value\n}\n\n// Build a destructive iterator for the value list\nfunction iteratorFor(items) {\n  var iterator = {\n    next: function() {\n      var value = items.shift()\n      return {done: value === undefined, value: value}\n    }\n  }\n\n  if (support.iterable) {\n    iterator[Symbol.iterator] = function() {\n      return iterator\n    }\n  }\n\n  return iterator\n}\n\nfunction Headers(headers) {\n  this.map = {}\n\n  if (headers instanceof Headers) {\n    headers.forEach(function(value, name) {\n      this.append(name, value)\n    }, this)\n  } else if (Array.isArray(headers)) {\n    headers.forEach(function(header) {\n      this.append(header[0], header[1])\n    }, this)\n  } else if (headers) {\n    Object.getOwnPropertyNames(headers).forEach(function(name) {\n      this.append(name, headers[name])\n    }, this)\n  }\n}\n\nHeaders.prototype.append = function(name, value) {\n  name = normalizeName(name)\n  value = normalizeValue(value)\n  var oldValue = this.map[name]\n  this.map[name] = oldValue ? oldValue + ', ' + value : value\n}\n\nHeaders.prototype['delete'] = function(name) {\n  delete this.map[normalizeName(name)]\n}\n\nHeaders.prototype.get = function(name) {\n  name = normalizeName(name)\n  return this.has(name) ? this.map[name] : null\n}\n\nHeaders.prototype.has = function(name) {\n  return this.map.hasOwnProperty(normalizeName(name))\n}\n\nHeaders.prototype.set = function(name, value) {\n  this.map[normalizeName(name)] = normalizeValue(value)\n}\n\nHeaders.prototype.forEach = function(callback, thisArg) {\n  for (var name in this.map) {\n    if (this.map.hasOwnProperty(name)) {\n      callback.call(thisArg, this.map[name], name, this)\n    }\n  }\n}\n\nHeaders.prototype.keys = function() {\n  var items = []\n  this.forEach(function(value, name) {\n    items.push(name)\n  })\n  return iteratorFor(items)\n}\n\nHeaders.prototype.values = function() {\n  var items = []\n  this.forEach(function(value) {\n    items.push(value)\n  })\n  return iteratorFor(items)\n}\n\nHeaders.prototype.entries = function() {\n  var items = []\n  this.forEach(function(value, name) {\n    items.push([name, value])\n  })\n  return iteratorFor(items)\n}\n\nif (support.iterable) {\n  Headers.prototype[Symbol.iterator] = Headers.prototype.entries\n}\n\nfunction consumed(body) {\n  if (body.bodyUsed) {\n    return Promise.reject(new TypeError('Already read'))\n  }\n  body.bodyUsed = true\n}\n\nfunction fileReaderReady(reader) {\n  return new Promise(function(resolve, reject) {\n    reader.onload = function() {\n      resolve(reader.result)\n    }\n    reader.onerror = function() {\n      reject(reader.error)\n    }\n  })\n}\n\nfunction readBlobAsArrayBuffer(blob) {\n  var reader = new FileReader()\n  var promise = fileReaderReady(reader)\n  reader.readAsArrayBuffer(blob)\n  return promise\n}\n\nfunction readBlobAsText(blob) {\n  var reader = new FileReader()\n  var promise = fileReaderReady(reader)\n  reader.readAsText(blob)\n  return promise\n}\n\nfunction readArrayBufferAsText(buf) {\n  var view = new Uint8Array(buf)\n  var chars = new Array(view.length)\n\n  for (var i = 0; i < view.length; i++) {\n    chars[i] = String.fromCharCode(view[i])\n  }\n  return chars.join('')\n}\n\nfunction bufferClone(buf) {\n  if (buf.slice) {\n    return buf.slice(0)\n  } else {\n    var view = new Uint8Array(buf.byteLength)\n    view.set(new Uint8Array(buf))\n    return view.buffer\n  }\n}\n\nfunction Body() {\n  this.bodyUsed = false\n\n  this._initBody = function(body) {\n    this._bodyInit = body\n    if (!body) {\n      this._bodyText = ''\n    } else if (typeof body === 'string') {\n      this._bodyText = body\n    } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n      this._bodyBlob = body\n    } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n      this._bodyFormData = body\n    } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n      this._bodyText = body.toString()\n    } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n      this._bodyArrayBuffer = bufferClone(body.buffer)\n      // IE 10-11 can't handle a DataView body.\n      this._bodyInit = new Blob([this._bodyArrayBuffer])\n    } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n      this._bodyArrayBuffer = bufferClone(body)\n    } else {\n      this._bodyText = body = Object.prototype.toString.call(body)\n    }\n\n    if (!this.headers.get('content-type')) {\n      if (typeof body === 'string') {\n        this.headers.set('content-type', 'text/plain;charset=UTF-8')\n      } else if (this._bodyBlob && this._bodyBlob.type) {\n        this.headers.set('content-type', this._bodyBlob.type)\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8')\n      }\n    }\n  }\n\n  if (support.blob) {\n    this.blob = function() {\n      var rejected = consumed(this)\n      if (rejected) {\n        return rejected\n      }\n\n      if (this._bodyBlob) {\n        return Promise.resolve(this._bodyBlob)\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as blob')\n      } else {\n        return Promise.resolve(new Blob([this._bodyText]))\n      }\n    }\n\n    this.arrayBuffer = function() {\n      if (this._bodyArrayBuffer) {\n        return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n      } else {\n        return this.blob().then(readBlobAsArrayBuffer)\n      }\n    }\n  }\n\n  this.text = function() {\n    var rejected = consumed(this)\n    if (rejected) {\n      return rejected\n    }\n\n    if (this._bodyBlob) {\n      return readBlobAsText(this._bodyBlob)\n    } else if (this._bodyArrayBuffer) {\n      return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n    } else if (this._bodyFormData) {\n      throw new Error('could not read FormData body as text')\n    } else {\n      return Promise.resolve(this._bodyText)\n    }\n  }\n\n  if (support.formData) {\n    this.formData = function() {\n      return this.text().then(decode)\n    }\n  }\n\n  this.json = function() {\n    return this.text().then(JSON.parse)\n  }\n\n  return this\n}\n\n// HTTP methods whose capitalization should be normalized\nvar methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']\n\nfunction normalizeMethod(method) {\n  var upcased = method.toUpperCase()\n  return methods.indexOf(upcased) > -1 ? upcased : method\n}\n\nfunction Request(input, options) {\n  options = options || {}\n  var body = options.body\n\n  if (input instanceof Request) {\n    if (input.bodyUsed) {\n      throw new TypeError('Already read')\n    }\n    this.url = input.url\n    this.credentials = input.credentials\n    if (!options.headers) {\n      this.headers = new Headers(input.headers)\n    }\n    this.method = input.method\n    this.mode = input.mode\n    this.signal = input.signal\n    if (!body && input._bodyInit != null) {\n      body = input._bodyInit\n      input.bodyUsed = true\n    }\n  } else {\n    this.url = String(input)\n  }\n\n  this.credentials = options.credentials || this.credentials || 'same-origin'\n  if (options.headers || !this.headers) {\n    this.headers = new Headers(options.headers)\n  }\n  this.method = normalizeMethod(options.method || this.method || 'GET')\n  this.mode = options.mode || this.mode || null\n  this.signal = options.signal || this.signal\n  this.referrer = null\n\n  if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n    throw new TypeError('Body not allowed for GET or HEAD requests')\n  }\n  this._initBody(body)\n}\n\nRequest.prototype.clone = function() {\n  return new Request(this, {body: this._bodyInit})\n}\n\nfunction decode(body) {\n  var form = new FormData()\n  body\n    .trim()\n    .split('&')\n    .forEach(function(bytes) {\n      if (bytes) {\n        var split = bytes.split('=')\n        var name = split.shift().replace(/\\+/g, ' ')\n        var value = split.join('=').replace(/\\+/g, ' ')\n        form.append(decodeURIComponent(name), decodeURIComponent(value))\n      }\n    })\n  return form\n}\n\nfunction parseHeaders(rawHeaders) {\n  var headers = new Headers()\n  // Replace instances of \\r\\n and \\n followed by at least one space or horizontal tab with a space\n  // https://tools.ietf.org/html/rfc7230#section-3.2\n  var preProcessedHeaders = rawHeaders.replace(/\\r?\\n[\\t ]+/g, ' ')\n  preProcessedHeaders.split(/\\r?\\n/).forEach(function(line) {\n    var parts = line.split(':')\n    var key = parts.shift().trim()\n    if (key) {\n      var value = parts.join(':').trim()\n      headers.append(key, value)\n    }\n  })\n  return headers\n}\n\nBody.call(Request.prototype)\n\nfunction Response(bodyInit, options) {\n  if (!options) {\n    options = {}\n  }\n\n  this.type = 'default'\n  this.status = options.status === undefined ? 200 : options.status\n  this.ok = this.status >= 200 && this.status < 300\n  this.statusText = 'statusText' in options ? options.statusText : 'OK'\n  this.headers = new Headers(options.headers)\n  this.url = options.url || ''\n  this._initBody(bodyInit)\n}\n\nBody.call(Response.prototype)\n\nResponse.prototype.clone = function() {\n  return new Response(this._bodyInit, {\n    status: this.status,\n    statusText: this.statusText,\n    headers: new Headers(this.headers),\n    url: this.url\n  })\n}\n\nResponse.error = function() {\n  var response = new Response(null, {status: 0, statusText: ''})\n  response.type = 'error'\n  return response\n}\n\nvar redirectStatuses = [301, 302, 303, 307, 308]\n\nResponse.redirect = function(url, status) {\n  if (redirectStatuses.indexOf(status) === -1) {\n    throw new RangeError('Invalid status code')\n  }\n\n  return new Response(null, {status: status, headers: {location: url}})\n}\n\nvar DOMException = self.DOMException\ntry {\n  new DOMException()\n} catch (err) {\n  DOMException = function(message, name) {\n    this.message = message\n    this.name = name\n    var error = Error(message)\n    this.stack = error.stack\n  }\n  DOMException.prototype = Object.create(Error.prototype)\n  DOMException.prototype.constructor = DOMException\n}\n\nfunction fetch(input, init) {\n  return new Promise(function(resolve, reject) {\n    var request = new Request(input, init)\n\n    if (request.signal && request.signal.aborted) {\n      return reject(new DOMException('Aborted', 'AbortError'))\n    }\n\n    var xhr = new XMLHttpRequest()\n\n    function abortXhr() {\n      xhr.abort()\n    }\n\n    xhr.onload = function() {\n      var options = {\n        status: xhr.status,\n        statusText: xhr.statusText,\n        headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n      }\n      options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL')\n      var body = 'response' in xhr ? xhr.response : xhr.responseText\n      resolve(new Response(body, options))\n    }\n\n    xhr.onerror = function() {\n      reject(new TypeError('Network request failed'))\n    }\n\n    xhr.ontimeout = function() {\n      reject(new TypeError('Network request failed'))\n    }\n\n    xhr.onabort = function() {\n      reject(new DOMException('Aborted', 'AbortError'))\n    }\n\n    xhr.open(request.method, request.url, true)\n\n    if (request.credentials === 'include') {\n      xhr.withCredentials = true\n    } else if (request.credentials === 'omit') {\n      xhr.withCredentials = false\n    }\n\n    if ('responseType' in xhr && support.blob) {\n      xhr.responseType = 'blob'\n    }\n\n    request.headers.forEach(function(value, name) {\n      xhr.setRequestHeader(name, value)\n    })\n\n    if (request.signal) {\n      request.signal.addEventListener('abort', abortXhr)\n\n      xhr.onreadystatechange = function() {\n        // DONE (success or failure)\n        if (xhr.readyState === 4) {\n          request.signal.removeEventListener('abort', abortXhr)\n        }\n      }\n    }\n\n    xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)\n  })\n}\n\nfetch.polyfill = true\n\nif (!self.fetch) {\n  self.fetch = fetch\n  self.Headers = Headers\n  self.Request = Request\n  self.Response = Response\n}\n\n\n//# sourceURL=webpack:///./node_modules/whatwg-fetch/fetch.js?");

/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var whatwg_fetch__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! whatwg-fetch */ \"./node_modules/whatwg-fetch/fetch.js\");\n/* harmony import */ var url_search_params_polyfill__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! url-search-params-polyfill */ \"./node_modules/url-search-params-polyfill/index.js\");\n/* harmony import */ var url_search_params_polyfill__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(url_search_params_polyfill__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _js_FrontendLogin__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./js/FrontendLogin */ \"./src/js/FrontendLogin.js\");\n/* harmony import */ var _js_reCAPTCHAs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./js/reCAPTCHAs */ \"./src/js/reCAPTCHAs.js\");\n/* harmony import */ var _js_Modals__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./js/Modals */ \"./src/js/Modals.js\");\n/* harmony import */ var _scss_main_scss__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./scss/main.scss */ \"./src/scss/main.scss\");\n/* harmony import */ var _scss_main_scss__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_scss_main_scss__WEBPACK_IMPORTED_MODULE_5__);\n\n\n\n\n\n // Do on DOM ready\n\ndocument.addEventListener('DOMContentLoaded', function () {\n  // Modals (global module)\n  new _js_reCAPTCHAs__WEBPACK_IMPORTED_MODULE_3__[\"default\"](); // Modals (global module)\n\n  new _js_Modals__WEBPACK_IMPORTED_MODULE_4__[\"default\"](); // Frontend Login\n\n  new _js_FrontendLogin__WEBPACK_IMPORTED_MODULE_2__[\"Login\"]();\n  new _js_FrontendLogin__WEBPACK_IMPORTED_MODULE_2__[\"ForgotPassword\"]();\n  new _js_FrontendLogin__WEBPACK_IMPORTED_MODULE_2__[\"ResetPassword\"](); // Exceptions for the login form when\n  // it's used on a modal\n\n  new _js_FrontendLogin__WEBPACK_IMPORTED_MODULE_2__[\"FrontendLogin_Modal\"]();\n});\n\n//# sourceURL=webpack:///./src/index.js?");

/***/ }),

/***/ "./src/js/FrontendLogin.js":
/*!*********************************!*\
  !*** ./src/js/FrontendLogin.js ***!
  \*********************************/
/*! exports provided: Login, ForgotPassword, ResetPassword, FrontendLogin_Modal */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Login\", function() { return Login; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ForgotPassword\", function() { return ForgotPassword; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ResetPassword\", function() { return ResetPassword; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"FrontendLogin_Modal\", function() { return FrontendLogin_Modal; });\n/* harmony import */ var _Utilities__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Utilities */ \"./src/js/Utilities.js\");\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n\n\nvar FrontendLogin =\n/*#__PURE__*/\nfunction () {\n  function FrontendLogin() {\n    _classCallCheck(this, FrontendLogin);\n\n    // Get elements\n    this.getElements(); // Check if we have to invoke the methods\n\n    if (this.shouldInvokeMethods()) {\n      // Bind form submission\n      this.validateFormSubmission(); // Handle reCAPTCHA changes\n\n      this.handleReCaptchaChanges();\n    }\n  }\n\n  _createClass(FrontendLogin, [{\n    key: \"getElements\",\n    value: function getElements() {\n      // Get the main elements\n      this.$elements = {}; // Define the main CSS classes\n\n      this.cssClasses = {};\n    }\n  }, {\n    key: \"validateFormSubmission\",\n    value: function validateFormSubmission() {\n      var _this = this;\n\n      // Check if the form exists\n      if (Object(_Utilities__WEBPACK_IMPORTED_MODULE_0__[\"isDefined\"])(this.$elements.mainForm)) {\n        // Bind submission\n        this.$elements.mainForm.onsubmit = function (event) {\n          // Create a variable to evaluate if the form has errors later\n          var canSubmit = true; // Check if the recaptcha is enabled, but the checkbox is not checked\n\n          if (_this.hasReCAPTCHA() && !_this.isCaptchaChecked()) {\n            // Add a CSS class for the reCAPTCHA error\n            _this.$elements.container.classList.add(_this.cssClasses.reCAPTCHAerror); // Update the error status\n\n\n            canSubmit = false; // Set frontend error\n\n            _this.setError(UncannyToolkit.frontendLogin.i18n.checkReCaptcha);\n\n            console.error('✋Frontend Login: The form is using reCAPTCHA, but you didn\\'t pass the verification');\n          } // Check if we can submit the form\n\n\n          if (canSubmit) {\n            // Submit the form\n            _this.submitForm(event);\n          } else {\n            // Prevent the form submission\n            event.preventDefault();\n            console.error('✋Frontend Login: Submission prevented');\n          }\n        };\n      }\n    }\n  }, {\n    key: \"submitForm\",\n    value: function submitForm(event) {\n      var _this2 = this;\n\n      // Hide errors\n      this.setError(false); // Add the loading animation\n\n      this.setLoadingStatus(true); // Disable the submit button\n\n      this.setButtonDisableStatus(true); // Check if we have to use AJAX\n\n      if (UncannyToolkit.frontendLogin.hasAjaxEnabled) {\n        // Prevent the form submission\n        event.preventDefault(); // Do AJAX call\n\n        Object(_Utilities__WEBPACK_IMPORTED_MODULE_0__[\"AJAXRequest\"])(this.ajaxAction, this.formData, function (response) {\n          // Remove the loading animation\n          _this2.setLoadingStatus(false); // Enable the submit button\n\n\n          _this2.setButtonDisableStatus(false); // Check if the call was really successful\n\n\n          if (response.success) {\n            _this2.afterValidSubmission(response);\n          } else {\n            // Check if there is a message\n            if (Object(_Utilities__WEBPACK_IMPORTED_MODULE_0__[\"isDefined\"])(response.message)) {\n              // Show the error\n              _this2.setError(response.message);\n            } else {\n              // Set a generic error message\n              _this2.setError(UncannyToolkit.i18n.error.generic);\n            }\n          }\n        }, function (response) {\n          // Check if there is a message\n          if (Object(_Utilities__WEBPACK_IMPORTED_MODULE_0__[\"isDefined\"])(response.message)) {\n            // Show the error\n            _this2.setError(response.message);\n          } else {\n            // Set a generic error message\n            _this2.setError(UncannyToolkit.i18n.error.generic);\n          } // Remove the loading animation\n\n\n          _this2.setLoadingStatus(false); // Enable the submit button\n\n\n          _this2.setButtonDisableStatus(false);\n        });\n      }\n    }\n  }, {\n    key: \"afterValidSubmission\",\n    value: function afterValidSubmission(response) {}\n  }, {\n    key: \"setLoadingStatus\",\n    value: function setLoadingStatus() {\n      var setAsLoading = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n\n      // Check if we have to add a loading animation to the submit button\n      if (UncannyToolkit.frontendLogin.ui.showAnimationOnSubmit) {\n        // Check if we have to enable the loading status\n        if (setAsLoading) {\n          // Add the loading animation\n          this.$elements.container.classList.add(this.cssClasses.loading);\n          this.$elements.submitButton.container.classList.add(this.cssClasses.btnLoading);\n        } else {\n          // Remove the loading status\n          this.$elements.container.classList.remove(this.cssClasses.loading);\n          this.$elements.submitButton.container.classList.remove(this.cssClasses.btnLoading);\n        }\n      }\n    }\n  }, {\n    key: \"setButtonDisableStatus\",\n    value: function setButtonDisableStatus() {\n      var setAsDisabled = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n\n      // Check if we have to disable the submit button\n      if (UncannyToolkit.frontendLogin.ui.buttonDisabledOnSubmit) {\n        // Check if we have to set it as disabled\n        if (setAsDisabled) {\n          // Disable the submit button\n          this.$elements.container.classList.add(this.cssClasses.disabled);\n          this.$elements.submitButton.container.classList.add(this.cssClasses.btnDisabled);\n          this.$elements.submitButton.button.setAttribute('disabled', true);\n        } else {\n          // Disable the submit button\n          this.$elements.container.classList.remove(this.cssClasses.disabled);\n          this.$elements.submitButton.container.classList.remove(this.cssClasses.btnDisabled);\n          this.$elements.submitButton.button.setAttribute('disabled', false);\n        }\n      }\n    }\n  }, {\n    key: \"setError\",\n    value: function setError() {\n      var error = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n      // Check if the error is defined\n      if (!Object(_Utilities__WEBPACK_IMPORTED_MODULE_0__[\"isEmpty\"])(error)) {\n        // Set the class to show the notice\n        this.$elements.errorNotice.container.classList.add(this.cssClasses.noticeHasError); // Set the error message\n\n        this.$elements.errorNotice.textNode.textContent = error;\n      } else {\n        // Set the class to hide the notice\n        this.$elements.errorNotice.container.classList.remove(this.cssClasses.noticeHasError); // Set the error message\n\n        this.$elements.errorNotice.textNode.textContent = ''; // Remove a CSS class for the reCAPTCHA error\n\n        this.$elements.container.classList.remove(this.cssClasses.reCAPTCHAerror);\n      }\n    }\n  }, {\n    key: \"handleReCaptchaChanges\",\n    value: function handleReCaptchaChanges() {\n      var _this3 = this;\n\n      // Add global method to handle what happened when\n      // the reCAPTCHA is checked\n      UncannyToolkit.frontendLogin.reCaptcha = {\n        correct: function correct(response) {\n          // Reset errors\n          _this3.setError(false);\n        }\n      };\n    }\n  }, {\n    key: \"hasReCAPTCHA\",\n    value: function hasReCAPTCHA() {\n      return Object(_Utilities__WEBPACK_IMPORTED_MODULE_0__[\"isDefined\"])(this.$elements.formFields.reCAPTCHA);\n    }\n  }, {\n    key: \"getReCAPTCHAResponse\",\n    value: function getReCAPTCHAResponse() {\n      // Get the reCAPTCHA ID\n      var id = this.$elements.formFields.reCAPTCHA.getAttribute('data-id'); // Get the response\n\n      return grecaptcha.getResponse(id);\n    }\n  }, {\n    key: \"isOnModal\",\n    value: function isOnModal() {\n      return Object(_Utilities__WEBPACK_IMPORTED_MODULE_0__[\"isDefined\"])(UncannyToolkit.modals['ult-login']);\n    }\n  }, {\n    key: \"isCaptchaChecked\",\n    value: function isCaptchaChecked() {\n      return !Object(_Utilities__WEBPACK_IMPORTED_MODULE_0__[\"isEmpty\"])(this.getReCAPTCHAResponse());\n    }\n  }, {\n    key: \"shouldInvokeMethods\",\n    value: function shouldInvokeMethods() {\n      return Object(_Utilities__WEBPACK_IMPORTED_MODULE_0__[\"isDefined\"])(this.$elements.container);\n    }\n  }, {\n    key: \"formData\",\n    get: function get() {\n      return {};\n    }\n  }, {\n    key: \"ajaxAction\",\n    get: function get() {\n      return '';\n    }\n  }]);\n\n  return FrontendLogin;\n}();\n\nvar Login =\n/*#__PURE__*/\nfunction (_FrontendLogin) {\n  _inherits(Login, _FrontendLogin);\n\n  function Login() {\n    _classCallCheck(this, Login);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Login).apply(this, arguments));\n  }\n\n  _createClass(Login, [{\n    key: \"getElements\",\n    value: function getElements() {\n      // Get the main elements\n      this.$elements = {\n        container: document.getElementById('ult-login'),\n        mainForm: document.getElementById('ult-login-form'),\n        submitButton: {\n          container: document.getElementsByClassName('login-submit')[0],\n          button: document.getElementById('ult-login-submit')\n        },\n        errorNotice: {\n          container: document.querySelector('#ult-login .ult-form__validation'),\n          textNode: document.querySelector('#ult-login .ult-notice-text')\n        },\n        formFields: {\n          email: document.getElementById('ult-login-email'),\n          password: document.getElementById('ult-login-password'),\n          redirectTo: document.querySelector('#ult-login .login-submit input[name=\"redirect_to\"]'),\n          reCAPTCHA: document.querySelector('#ult-login .ult-form-recaptcha'),\n          rememberMe: document.getElementById('ult-login-remember')\n        }\n      };\n    } // Define the AJAX action ID\n\n  }, {\n    key: \"afterValidSubmission\",\n    value: function afterValidSubmission(response) {\n      // Reload the page\n      if (!Object(_Utilities__WEBPACK_IMPORTED_MODULE_0__[\"isEmpty\"])(this.formData.redirectTo)) {\n        window.location.href = this.formData.redirectTo;\n      } else {\n        window.location.reload();\n      }\n    }\n  }, {\n    key: \"ajaxAction\",\n    get: function get() {\n      return 'ult-login';\n    }\n  }, {\n    key: \"cssClasses\",\n    get: function get() {\n      return {\n        reCAPTCHAerror: 'ult-login--recaptcha-error',\n        loading: 'ult-login--loading',\n        disabled: 'ult-login--disabled',\n        btnLoading: 'ult-form__submit-btn--loading',\n        btnDisabled: 'ult-form__submit-btn--disabled',\n        noticeHasError: 'ult-form__validation--has-error'\n      };\n    }\n  }, {\n    key: \"formData\",\n    get: function get() {\n      // Get the form data\n      var formData = {\n        email: this.$elements.formFields.email.value,\n        password: this.$elements.formFields.password.value,\n        redirectTo: this.$elements.formFields.redirectTo.value,\n        rememberMe: this.$elements.formFields.rememberMe.checked // Check if it has a reCAPTCHA\n\n      };\n\n      if (this.hasReCAPTCHA()) {\n        formData.reCAPTCHA = this.getReCAPTCHAResponse();\n      }\n\n      return formData;\n    }\n  }]);\n\n  return Login;\n}(FrontendLogin);\nvar ForgotPassword =\n/*#__PURE__*/\nfunction (_FrontendLogin2) {\n  _inherits(ForgotPassword, _FrontendLogin2);\n\n  function ForgotPassword() {\n    _classCallCheck(this, ForgotPassword);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(ForgotPassword).apply(this, arguments));\n  }\n\n  _createClass(ForgotPassword, [{\n    key: \"getElements\",\n    value: function getElements() {\n      // Get the main elements\n      this.$elements = {\n        container: document.getElementById('ult-forgot-password'),\n        mainForm: document.getElementById('ult-forgot-password-form'),\n        submitButton: {\n          container: document.querySelector('.ult-form__row--submit'),\n          button: document.getElementById('ult-forgot-password-submit-btn')\n        },\n        errorNotice: {\n          container: document.querySelector('#ult-forgot-password .ult-form__validation'),\n          textNode: document.querySelector('#ult-forgot-password .ult-notice-text')\n        },\n        formFields: {\n          email: document.getElementById('ult-forgot-email'),\n          reCAPTCHA: document.querySelector('#ult-forgot-password .ult-form-recaptcha')\n        }\n      };\n    } // Define the AJAX action ID\n\n  }, {\n    key: \"afterValidSubmission\",\n    value: function afterValidSubmission(response) {\n      // Show a confirmation message\n      console.log('Show a confirmation message');\n    }\n  }, {\n    key: \"ajaxAction\",\n    get: function get() {\n      return 'ult-forgot-password';\n    }\n  }, {\n    key: \"cssClasses\",\n    get: function get() {\n      return {\n        reCAPTCHAerror: 'ult-forgot-password--recaptcha-error',\n        loading: 'ult-forgot-password--loading',\n        disabled: 'ult-forgot-password--disabled',\n        btnLoading: 'ult-form__submit-btn--loading',\n        btnDisabled: 'ult-form__submit-btn--disabled',\n        noticeHasError: 'ult-form__validation--has-error'\n      };\n    }\n  }, {\n    key: \"formData\",\n    get: function get() {\n      // Get the form data\n      var formData = {\n        email: this.$elements.formFields.email.value // Check if it has a reCAPTCHA\n\n      };\n\n      if (this.hasReCAPTCHA()) {\n        formData.reCAPTCHA = this.getReCAPTCHAResponse();\n      }\n\n      return formData;\n    }\n  }]);\n\n  return ForgotPassword;\n}(FrontendLogin);\nvar ResetPassword =\n/*#__PURE__*/\nfunction (_FrontendLogin3) {\n  _inherits(ResetPassword, _FrontendLogin3);\n\n  function ResetPassword() {\n    _classCallCheck(this, ResetPassword);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(ResetPassword).apply(this, arguments));\n  }\n\n  _createClass(ResetPassword, [{\n    key: \"getElements\",\n    value: function getElements() {\n      // Get the main elements\n      this.$elements = {\n        container: document.getElementById('ult-reset-password'),\n        mainForm: document.getElementById('ult-reset-password-form'),\n        submitButton: {\n          container: document.querySelector('.ult-form__row--submit'),\n          button: document.getElementById('ult-reset-password-submit-btn')\n        },\n        errorNotice: {\n          container: document.querySelector('#ult-reset-password .ult-form__validation'),\n          textNode: document.querySelector('#ult-reset-password .ult-notice-text')\n        },\n        formFields: {\n          password: document.getElementById('ult-reset-new-password'),\n          passwordRepeat: document.getElementById('ult-reset-confirm-password'),\n          reCAPTCHA: document.querySelector('#ult-reset-password .ult-form-recaptcha')\n        }\n      };\n    } // Define the AJAX action ID\n\n  }, {\n    key: \"afterValidSubmission\",\n    value: function afterValidSubmission(response) {\n      // Show a confirmation message\n      console.log('Show a confirmation message');\n    }\n  }, {\n    key: \"ajaxAction\",\n    get: function get() {\n      return 'ult-reset-password';\n    }\n  }, {\n    key: \"cssClasses\",\n    get: function get() {\n      return {\n        reCAPTCHAerror: 'ult-reset-password--recaptcha-error',\n        loading: 'ult-reset-password--loading',\n        disabled: 'ult-reset-password--disabled',\n        btnLoading: 'ult-form__submit-btn--loading',\n        btnDisabled: 'ult-form__submit-btn--disabled',\n        noticeHasError: 'ult-form__validation--has-error'\n      };\n    }\n  }, {\n    key: \"formData\",\n    get: function get() {\n      // Get the form data\n      var formData = {\n        password: this.$elements.formFields.password.value,\n        passwordRepeat: this.$elements.formFields.passwordRepeat.value // Check if it has a reCAPTCHA\n\n      };\n\n      if (this.hasReCAPTCHA()) {\n        formData.reCAPTCHA = this.getReCAPTCHAResponse();\n      }\n\n      return formData;\n    }\n  }]);\n\n  return ResetPassword;\n}(FrontendLogin);\n/**\n * This class handles the login functionality when \n */\n\nvar FrontendLogin_Modal =\n/*#__PURE__*/\nfunction () {\n  function FrontendLogin_Modal() {\n    _classCallCheck(this, FrontendLogin_Modal);\n\n    // Check if we should invoke the callbacks\n    if (this.shouldInvokeMethods()) {\n      // Get elements\n      this.getElements(); // Handle clicks to the buttons to show the sections\n\n      this.handleContainerVisiblity();\n    }\n  }\n\n  _createClass(FrontendLogin_Modal, [{\n    key: \"getElements\",\n    value: function getElements() {\n      this.$elements = {\n        container: document.getElementById('ult-login-modal'),\n        loginShowButton: document.getElementById('ult-form-footer-login'),\n        forgotPasswordShowButton: document.getElementById('ult-form-footer-forgot-password')\n      };\n    }\n  }, {\n    key: \"handleContainerVisiblity\",\n    value: function handleContainerVisiblity() {\n      var _this4 = this;\n\n      if (Object(_Utilities__WEBPACK_IMPORTED_MODULE_0__[\"isDefined\"])(this.$elements.forgotPasswordShowButton)) {\n        // Listen clicks to the button to show the Forgot Password section\n        this.$elements.forgotPasswordShowButton.addEventListener('click', function (event) {\n          // Prevent the event, we don't want to send them to another page\n          event.preventDefault(); // Show the Forgot Password form\n\n          _this4.showSection('forgot-password');\n        });\n      }\n\n      if (Object(_Utilities__WEBPACK_IMPORTED_MODULE_0__[\"isDefined\"])(this.$elements.loginShowButton)) {\n        // Listen clicks to the button to show the Log in section\n        this.$elements.loginShowButton.addEventListener('click', function (event) {\n          // Prevent the event, we don't want to send them to another page\n          event.preventDefault(); // Show the Forgot Password form\n\n          _this4.showSection('login');\n        });\n      }\n    }\n  }, {\n    key: \"showSection\",\n    value: function showSection() {\n      var section = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'login';\n      // Remove both classes. We'll add the correct one later\n      this.$elements.container.classList.remove('ult-login-modal--login', 'ult-login-modal--forgot-password'); // Show and hide sections\n\n      if (section == 'login') {\n        this.$elements.container.classList.add('ult-login-modal--login');\n      } else if (section == 'forgot-password') {\n        this.$elements.container.classList.add('ult-login-modal--forgot-password');\n      }\n    }\n  }, {\n    key: \"shouldInvokeMethods\",\n    value: function shouldInvokeMethods() {\n      return !UncannyToolkit.frontendLogin.currentPageIsLoginPage && Object(_Utilities__WEBPACK_IMPORTED_MODULE_0__[\"isDefined\"])(UncannyToolkit.modals['ult-login']);\n    }\n  }]);\n\n  return FrontendLogin_Modal;\n}();\n\n//# sourceURL=webpack:///./src/js/FrontendLogin.js?");

/***/ }),

/***/ "./src/js/Modals.js":
/*!**************************!*\
  !*** ./src/js/Modals.js ***!
  \**************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _Utilities__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Utilities */ \"./src/js/Utilities.js\");\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar events = __webpack_require__(/*! eventslibjs */ \"./node_modules/eventslibjs/dist/events.polyfills.min.js\");\n\n\n\nvar Modals =\n/*#__PURE__*/\nfunction () {\n  function Modals() {\n    _classCallCheck(this, Modals);\n\n    // Create an array to save the IDs of all the modals\n    // on this page\n    this.allModals = []; // Create a property in the main global object\n    // to save the modals\n\n    UncannyToolkit.modals = {}; // Get elements\n\n    this.getElements(); // Initialize modals\n\n    this.createModals();\n  }\n\n  _createClass(Modals, [{\n    key: \"getElements\",\n    value: function getElements() {\n      this.$elements = {\n        modals: document.querySelectorAll('.ult-modal')\n      };\n    }\n  }, {\n    key: \"createModals\",\n    value: function createModals() {\n      var _this = this;\n\n      // Itearate the modals (if any)\n      _toConsumableArray(this.$elements.modals).forEach(function ($modal) {\n        // Get the modal ID\n        var modalID = Object(_Utilities__WEBPACK_IMPORTED_MODULE_0__[\"isDefined\"])($modal.getAttribute('data-id')) ? $modal.getAttribute('data-id') : ''; // Check if there isn't already a modal with that ID\n\n        if (!_this.allModals.includes(modalID)) {\n          // Then create the modal\n          var modal = new Modal($modal); // And save the ID\n\n          _this.allModals.push(modalID); // Save the modal in the main global variable\n\n\n          UncannyToolkit.modals[modalID] = modal;\n        }\n      });\n    }\n  }]);\n\n  return Modals;\n}();\n\nvar Modal =\n/*#__PURE__*/\nfunction () {\n  function Modal($modalContent) {\n    _classCallCheck(this, Modal);\n\n    // Get the modal data\n    this.getModalData($modalContent); // Render the modal\n\n    this.renderModal($modalContent); // Listen clicks to containers that are trying to open the modal\n\n    this.handleModalOpen(); // Listen clicks outside the modal box\n\n    this.handleClickOutsideTheModal();\n  }\n\n  _createClass(Modal, [{\n    key: \"getModalData\",\n    value: function getModalData($modalContent) {\n      // Get the main modal data like ID, title and the parameter\n      // that defines whether it should have the \"Discard\" button\n      this.modalData = {\n        id: Object(_Utilities__WEBPACK_IMPORTED_MODULE_0__[\"isDefined\"])($modalContent.getAttribute('data-id')) ? $modalContent.getAttribute('data-id') : '',\n        title: Object(_Utilities__WEBPACK_IMPORTED_MODULE_0__[\"isDefined\"])($modalContent.getAttribute('data-title')) ? $modalContent.getAttribute('data-title') : '',\n        btnDismiss: Object(_Utilities__WEBPACK_IMPORTED_MODULE_0__[\"isDefined\"])($modalContent.getAttribute('data-btn-dismiss')) ? !!parseInt($modalContent.getAttribute('data-btn-dismiss')) : true\n      };\n    }\n  }, {\n    key: \"renderModal\",\n    value: function renderModal($modalContent) {\n      // Create the modal\n      var $modal = document.createElement('div'); // Set the element ID\n\n      $modal.id = \"ult-modal-container-\".concat(this.modalData.id); // Add class to the main container\n\n      $modal.classList.add('ult-modal-container'); // Set the data-id attribute\n\n      $modal.setAttribute('data-id', this.modalData.id); // Set the children\n\n      $modal.innerHTML = \"\\n\\t\\t\\t<div class=\\\"ult-modal__inside\\\">\\n\\t\\t\\t\\t<div class=\\\"ult-modal-box\\\">\\n\\t\\t\\t\\t\\t\".concat(!Object(_Utilities__WEBPACK_IMPORTED_MODULE_0__[\"isEmpty\"])(this.modalData.title) ? \"\\n\\t\\t\\t\\t\\t\\t<div class=\\\"ult-modal-box-header\\\">\\n\\t\\t\\t\\t\\t\\t\\t<h2>\".concat(this.modalData.title, \"</h2>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\") : '', \"\\n\\n\\t\\t\\t\\t\\t<div class=\\\"ult-modal-box-content\\\"></div>\\n\\n\\t\\t\\t\\t\\t\").concat(this.modalData.btnDismiss ? \"\\n\\t\\t\\t\\t\\t\\t<div class=\\\"ult-modal-box-footer\\\">\\n\\t\\t\\t\\t\\t\\t\\t<button class=\\\"ult-modal-box-footer__dismiss\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\".concat(UncannyToolkit.i18n.dismiss, \"\\n\\t\\t\\t\\t\\t\\t\\t</button>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\") : '', \"\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t\"); // Add the modal content\n\n      $modal.querySelector('.ult-modal-box-content').appendChild($modalContent); // Add the modal to the end of the document\n\n      document.body.appendChild($modal); // Save the main elements\n\n      this.$elements = {\n        container: $modal,\n        box: $modal.querySelector('.ult-modal-box'),\n        content: $modal.querySelector('.ult-modal-box-content .ult-modal') // Check if it has the dismiss button\n\n      };\n\n      if (this.modalData.btnDismiss) {\n        // Get the dismiss button\n        this.$elements.dismissBtn = $modal.querySelector('.ult-modal-box-footer__dismiss'); // Add the event listener\n\n        this.handleDismissButton();\n      }\n    }\n  }, {\n    key: \"handleModalOpen\",\n    value: function handleModalOpen() {\n      var _this2 = this;\n\n      // Listen clicks to the document, but invoke the callback only if the\n      // clicked element matches one of the following selectors:\n      // 1. .ult-modal-open[data-id=\"${ this.modalData.id }\"]\n      // 2. [class*=\"ult-modal-open----${ this.modalData.id }\"]\n      // 3. [href*=\"ult-modal-open----${ this.modalData.id }\"]\n      events.on('click', \".ult-modal-open[data-id=\\\"\".concat(this.modalData.id, \"\\\"], [class*=\\\"ult-modal-open----\").concat(this.modalData.id, \"\\\"], [href*=\\\"ult-modal-open----\").concat(this.modalData.id, \"\\\"]\"), function (event) {\n        // Prevent default\n        event.preventDefault(); // Show the modal\n\n        _this2.showModal();\n      });\n    }\n  }, {\n    key: \"handleDismissButton\",\n    value: function handleDismissButton() {\n      var _this3 = this;\n\n      // Listen clicks to the dismiss button\n      this.$elements.dismissBtn.addEventListener('click', function () {\n        // Hide the modal\n        _this3.hideModal();\n      });\n    }\n  }, {\n    key: \"handleClickOutsideTheModal\",\n    value: function handleClickOutsideTheModal() {\n      var _this4 = this;\n\n      // Listen clicks to the while modal container\n      this.$elements.container.addEventListener('mouseup', function (event) {\n        // Set the targetted container\n        var $container = _this4.$elements.box;\n\n        if ($container !== event.target && !$container.contains(event.target)) {\n          // Hide modal\n          _this4.hideModal();\n        }\n      });\n    }\n  }, {\n    key: \"setLoading\",\n    value: function setLoading() {\n      var isLoading = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n\n      // Check if we have to set the loading class\n      if (isLoading) {\n        this.$elements.container.classList.add('ult-modal-container--loading');\n      } else {\n        // Remove the loading class\n        this.$elements.container.classList.remove('ult-modal-container--loading');\n      }\n    }\n  }, {\n    key: \"setContent\",\n    value: function setContent() {\n      var HTMLcontent = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n      // Set the content\n      this.$elements.content.innerHTML = HTMLcontent;\n    }\n  }, {\n    key: \"showModal\",\n    value: function showModal() {\n      // Show the modal\n      Object(_Utilities__WEBPACK_IMPORTED_MODULE_0__[\"fade\"])('in', this.$elements.container);\n      this.$elements.container.classList.add('ult-modal-container--open'); // Add class to the body element, so the user can use it\n      // to change other stuff\n\n      document.body.classList.add('ult-modal--open');\n    }\n  }, {\n    key: \"hideModal\",\n    value: function hideModal() {\n      var _this5 = this;\n\n      // Hide the modal\n      Object(_Utilities__WEBPACK_IMPORTED_MODULE_0__[\"fade\"])('out', this.$elements.container, function () {\n        // Hide the modal\n        _this5.$elements.container.classList.remove('ult-modal-container--open'); // Remove class from the body element\n\n\n        document.body.classList.remove('ult-modal--open');\n      });\n    }\n  }]);\n\n  return Modal;\n}();\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Modals);\n\n//# sourceURL=webpack:///./src/js/Modals.js?");

/***/ }),

/***/ "./src/js/Utilities.js":
/*!*****************************!*\
  !*** ./src/js/Utilities.js ***!
  \*****************************/
/*! exports provided: isDefined, isEmpty, isObject, fade, AJAXRequest */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isDefined\", function() { return isDefined; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isEmpty\", function() { return isEmpty; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isObject\", function() { return isObject; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"fade\", function() { return fade; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"AJAXRequest\", function() { return AJAXRequest; });\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/**\n * Determine if a variable is set and is not NULL\n *\n * @since 3.3\n *\n * @param  {mixed}      variable - The variable being evaluated\n * @return {boolean}    TRUE if the variable is defined\n */\nvar isDefined = function isDefined(variable) {\n  // Returns true if the variable is undefined\n  return typeof variable !== 'undefined' && variable !== null;\n};\n/**\n * Determine whether a variable is empty\n *\n * @since 3.3\n *\n * @param   {mixed}     variable - The variable being evaluated\n * @return  {boolean}   TRUE if the variable is empty\n */\n\nvar isEmpty = function isEmpty(variable) {\n  var response = true; // Check if the variable is defined, otherwise is empty\n\n  if (isDefined(variable)) {\n    // Check if it's array\n    if (Array.isArray(variable)) {\n      response = variable.length == 0;\n    } else if (isObject(variable)) {\n      response = Object.keys(variable).length == 0;\n    } else {\n      response = variable == '';\n    }\n  }\n\n  return response;\n};\n/**\n * Determine whether a variable is an object.\n * The Object constructor creates an object wrapper for the given value. If the value is null or undefined, it will create and return an empty object, otherwise, it will return an object of a type that corresponds to the given value. If the value is an object already, it will return the value.\n *\n * @since 3.3\n *\n * @param   {mixed}     variable - The variable being evaluated\n * @return  {boolean}   TRUE if the variable is an object\n */\n\nvar isObject = function isObject(variable) {\n  return variable === Object(variable);\n};\n/**\n * Simulate a fade in/fade out transition\n *\n * @since 3.3\n * \n * @param  {String} fade        Whether we have to fade in our fade out the element\n * @param  {Element}   element  Element\n */\n\nvar fade = function fade() {\n  var in_out = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'in';\n  var element = arguments.length > 1 ? arguments[1] : undefined;\n  var callback = arguments.length > 2 ? arguments[2] : undefined;\n  // Check what's the class we have to add\n  var fadeClass = \"ult--fade-\".concat(in_out); // Define the default callback\n\n  callback = isDefined(callback) ? callback : function () {}; // Add the fade class\n\n  element.classList.add(fadeClass); // Remove it after 300ms (the fade duration)\n\n  setTimeout(function () {\n    // Remove the fade class\n    element.classList.remove(fadeClass); // Invoke the callback\n\n    callback();\n  }, 280);\n};\n/**\n * Performs an AJAX request\n *\n * @since 3.3\n *\n * @param {object}    data - Data to be sent in the request\n * @param {callback}  [onSuccess] - Function to be invoked if the request is successful\n * @param {callback}  [onFail] - Function to be invoked if the request fails\n */\n\nfunction AJAXRequest() {\n  var action = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n  var data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  var onSuccess = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n  var onFail = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n  // Add {action} to the data object\n  data = _objectSpread({}, data, {\n    action: action,\n    nonce: UncannyToolkit.ajax.nonce\n  }); // Do the call\n\n  fetch(UncannyToolkit.ajax.url, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/x-www-form-urlencoded',\n      'Cache-Control': 'no-cache'\n    },\n    body: new URLSearchParams(data)\n  }).then(function (response) {\n    // Check if the call was not successful\n    if (!response.ok) {\n      console.error('✋Uncanny Toolkit: The fetch call threw an error');\n\n      if (isDefined(onFail)) {\n        onFail(_objectSpread({}, response, {\n          success: false\n        }));\n      } // Stop chain\n\n\n      Promise.reject(err);\n    }\n  }).then(function (response) {\n    return response.json();\n  }).then(function (response) {\n    // Check if the call was successful\n    if (response.success) {\n      if (isDefined(onSuccess)) {\n        onSuccess(response);\n      }\n    } else {\n      if (isDefined(onFail)) {\n        onFail(_objectSpread({}, response, {\n          success: false\n        }));\n      }\n    }\n  }).catch(function (response) {\n    console.error('✋Uncanny Toolkit: The fetch call threw an error');\n\n    if (isDefined(onFail)) {\n      onFail(_objectSpread({}, response, {\n        success: false\n      }));\n    }\n  });\n  ;\n}\n\n//# sourceURL=webpack:///./src/js/Utilities.js?");

/***/ }),

/***/ "./src/js/reCAPTCHAs.js":
/*!******************************!*\
  !*** ./src/js/reCAPTCHAs.js ***!
  \******************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _Utilities__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Utilities */ \"./src/js/Utilities.js\");\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n\n/**\n * Render reCAPTCHAs\n */\n\nvar reCAPTCHAs =\n/*#__PURE__*/\nfunction () {\n  function reCAPTCHAs() {\n    var _this = this;\n\n    _classCallCheck(this, reCAPTCHAs);\n\n    // Get elements\n    this.whenReady(function () {\n      // Render the reCAPTCHAs\n      _this.renderReCaptchas();\n    });\n  }\n\n  _createClass(reCAPTCHAs, [{\n    key: \"whenReady\",\n    value: function whenReady(callback) {\n      // Check if the reCAPTCHA script already loaded\n      if (Object(_Utilities__WEBPACK_IMPORTED_MODULE_0__[\"isDefined\"])(window.grecaptcha)) {\n        // Invoke the callback\n        callback();\n      } else {\n        // Define a function that will be invoked once Google reCAPTCHA\n        // is ready to use\n        window.UncannyToolkit.reCaptchaInit = function () {\n          // Invoke the callback\n          callback();\n        };\n      }\n    }\n  }, {\n    key: \"renderReCaptchas\",\n    value: function renderReCaptchas() {\n      // Get containers\n      var $reCAPTCHAs = document.querySelectorAll('.ult-form-recaptcha'); // Iterate the elements\n\n      _toConsumableArray($reCAPTCHAs).forEach(function ($reCAPTCHA) {\n        // Render the reCAPTCHA\n        var id = window.grecaptcha.render($reCAPTCHA, {\n          sitekey: $reCAPTCHA.getAttribute('data-sitekey'),\n          callback: $reCAPTCHA.getAttribute('data-callback')\n        }); // Add the ID to the element so we can get the correct\n        // validation token later\n\n        $reCAPTCHA.setAttribute('data-id', id);\n      });\n    }\n  }]);\n\n  return reCAPTCHAs;\n}();\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (reCAPTCHAs);\n\n//# sourceURL=webpack:///./src/js/reCAPTCHAs.js?");

/***/ }),

/***/ "./src/scss/main.scss":
/*!****************************!*\
  !*** ./src/scss/main.scss ***!
  \****************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// extracted by mini-css-extract-plugin\n\n//# sourceURL=webpack:///./src/scss/main.scss?");

/***/ })

/******/ });